{"version":3,"sources":["assets/blob.svg","assets/peshal_final.png","components/NavBar.js","pages/Contact.js","pages/Projects.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textDecoration","color","textTransform","fontSize","letterSpacing","appbar","backgroundColor","transition","height","smallHeight","minHeight","padding","Navbar","navbarRef","useRef","classes","handleScroll","current","window","scrollY","classList","add","remove","useEffect","addEventListener","removeEventListener","className","AppBar","ref","position","Toolbar","Typography","variant","to","Button","component","Link","Contact","href","Projects","Home","src","require","alt","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aaf77f0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blob.1ded6ca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/peshal_final.4dedee84.png\";","import React, { useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        \"& > a\": {\n            textDecoration: \"none\",\n            color: '#000'\n        },\n        flexGrow: 1,\n        textTransform: \"uppercase\",\n        fontSize: 29,\n        letterSpacing: '0.75ch'\n    },\n    appbar: {\n        backgroundColor: '#fff',\n        color: '#000',\n        \"& > div\": {\n            transition: \"min-height 0.5s ease-in\"\n        },\n        height: 64,\n        transition: \"height 0.5s ease-in-out\"\n    },\n    smallHeight: {\n        \"& > div\": {\n            minHeight: 50\n        },\n        padding: 0,\n        height: 50,\n    }\n}));\n\nexport default function Navbar() {\n    const navbarRef = useRef(null);\n    const classes = useStyles();\n\n    const handleScroll = () => {\n        if (navbarRef.current) {\n            if (window.scrollY > 10 && navbarRef.current) {\n                navbarRef.current.classList.add(classes.smallHeight)\n            } else {\n                navbarRef.current.classList.remove(classes.smallHeight)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll)\n        return () => window.removeEventListener('scroll', handleScroll)\n    }, [])\n    // window.addEventListener('scroll', () => {\n    //     if (navbarRef.current) {\n    //         if (window.scrollY > 10 && navbarRef.current) {\n    //             navbarRef.current.classList.add(classes.smallHeight)\n    //         } else {\n    //             navbarRef.current.classList.remove(classes.smallHeight)\n    //         }\n    //     }\n\n    // })\n\n    return (\n        <div className={classes.root}>\n            <AppBar ref={navbarRef} position=\"fixed\" className={classes.appbar}>\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link to=\"/\">Peshal Agarwal</Link>\n                    </Typography>\n                    <Button color=\"inherit\" component={Link} to=\"/experiences\"> Experiences</Button>\n                    <Button color=\"inherit\" component={Link} to=\"/projects\">projects</Button>\n                    <Button color=\"inherit\" component={Link} to=\"/publications\"> Publications</Button>\n                    <Button color=\"inherit\" component={Link} to=\"/awards\"> Awards</Button>\n                    <Button color=\"inherit\" component={Link} to=\"/contact\"> Contact</Button>\n                </Toolbar>\n            </AppBar>\n        </div >\n    );\n}\n","import React from 'react'\nimport './Contact.css'\n\nexport const Contact = () => {\n    return (\n        <div className=\"contact\">\n            <h1> Please Connect me on </h1>\n            <div className=\"contact__icons\">\n                <a href=\"#\"><i className=\"fab fa-facebook\"></i></a>\n                <a href=\"#\"><i className=\"fab fa-twitter\"></i></a>\n                <a href=\"#\"><i className=\"fab fa-instagram\"></i></a>\n                <a href=\"#\"><i className=\"fab fa-linkedin\"></i></a>\n            </div>\n        </div>\n\n    )\n}\n","import React from 'react'\nimport './Projects.css';\n\nexport const Projects = () => {\n    return (\n        <div className=\"project\">\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti eveniet enim excepturi hic eaque, adipisci pariatur obcaecati nulla iure magni nisi, perferendis sit ullam distinctio dolorem sequi officia voluptatibus expedita!</p>\n            <p>Consectetur eveniet odit nobis suscipit placeat illum saepe laborum ad commodi repellendus doloribus earum rem iusto, quae culpa fuga, ducimus maiores quos amet. Eos necessitatibus nemo ratione sit esse ex.</p>\n            <p>Totam laborum facere tempora quos in distinctio repudiandae assumenda voluptatibus! Sequi, nobis! Explicabo ipsa ad id voluptatibus iure earum dolore deleniti quas ab architecto, quibusdam aliquam libero nulla, culpa eius.</p>\n            <p>Porro quasi consectetur quisquam architecto perferendis similique provident totam quam quibusdam, cupiditate error nihil dolorum. Itaque eligendi consequuntur ratione. Labore iure tenetur id maxime cum architecto iusto autem inventore praesentium.</p>\n            <p>Consequatur, voluptatibus? Eaque eligendi dolores modi quis. Numquam animi aliquam aperiam quae enim perferendis rem sapiente, vitae laboriosam sunt asperiores sint cupiditate a veritatis officia, ad nam voluptatum nobis voluptatibus.</p>\n            <p>Pariatur ullam temporibus consectetur aliquam adipisci modi sapiente corporis fuga quae? Eligendi porro voluptas dolor tenetur est aut aperiam magni. Reiciendis, repellendus commodi assumenda unde hic recusandae temporibus nam quas!</p>\n            <p>Eveniet dolor ipsum vitae quo sint iure asperiores quidem consequuntur quisquam placeat facilis omnis, voluptas praesentium, accusamus eaque ipsam optio minus, unde quasi modi fugiat! Magnam mollitia perferendis dolorum unde.</p>\n            <p>Provident, incidunt quia temporibus enim maxime ratione repellat excepturi quam facilis hic, id nemo reprehenderit fugit odio animi, eaque exercitationem? Tempora esse odit ipsa sed provident non, temporibus maxime in.</p>\n            <p>Accusamus laborum repudiandae corporis quidem consequatur minima iste veniam beatae, eligendi perferendis enim aut architecto dolorum consequuntur cum numquam impedit eveniet quae illum? Autem qui nobis reprehenderit. Consequuntur, dolorum itaque?</p>\n            <p>Eos, sapiente at, consectetur iure, voluptatum illum molestiae earum porro ab libero necessitatibus fugit facilis eveniet commodi numquam quasi velit vitae ducimus explicabo. Fuga cupiditate tempore officiis cum minus impedit.</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport './Home.css';\n\nexport const Home = () => {\n    return (\n        <div className=\"main\">\n            <img className=\"main__blob\" src={require('../assets/blob.svg')}></img>\n            <div className=\"main__intro\">\n                <h1>Hi There</h1>\n                <h4>I'm Peshal Agarwal and I'm a Data Scientist</h4>\n                <h6>This site is under construction....</h6>\n            </div>\n            <div className=\"main__image\">\n                <img alt=\"background\" src={require('../assets/peshal_final.png')}></img>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport NavBar from './components/NavBar'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Contact } from './pages/Contact';\nimport { Projects } from './pages/Projects';\nimport { Home } from './pages/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar>\n      </NavBar>\n      <Switch>\n        <Route exact path='/' component={Home}></Route>\n        <Route exact path='/projects' component={Projects}></Route>\n        <Route exact path='/contact' component={Contact}></Route>\n      </Switch>\n    </Router>\n\n\n\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}