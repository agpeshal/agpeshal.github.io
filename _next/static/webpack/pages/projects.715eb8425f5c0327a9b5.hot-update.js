webpackHotUpdate_N_E("pages/projects",{

/***/ "./data/data-projects.js":
/*!*******************************!*\
  !*** ./data/data-projects.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {var data = [{\n  title: \"Unsupervised Domain Adaptation\",\n  image: \"/assets/thesis.png\",\n  summary: \"Devised a framework to adapt to new a domain while ensuring adversarial robustness. Achieved state-of-the-art robust accuracy on four benchmark datasets.\",\n  report: \"none\",\n  github: \"none\"\n}, {\n  title: \"Patient ratings and reviews\",\n  image: \"/assets/drug_rating.png\",\n  summary: \"Analysed data of 280k patients' drug reviews and ratings under different conditions and treatments. Implemented RNNs to accurately predict drug ratings based on their reviews.\",\n  report: \"none\",\n  github: \"https://colab.research.google.com/drive/1bDopddB67FAyV8A_51O6Z6ra_obHY5M8\"\n}, {\n  title: \"Neural Network Verification\",\n  image: \"/assets/deeppoly.png\",\n  summary: \"Build a precise and scalable automated verifier for proving the robustness of fully connected and convolutional neural networks against adversarial attacks\",\n  report: \"/assets/pdf/Report_RIAI.pdf\",\n  github: \"https://github.com/agpeshal/Verifier\"\n}, {\n  title: \"Adversarial ML\",\n  image: \"/assets/robustness.png\",\n  summary: \"Implemented Fast Gradient Sign Method (FGSM) and Projected Gradient Descent (PGD) attacks on networks trained over CIFAR10 and MNIST.\",\n  report: \"none\",\n  github: \"https://github.com/agpeshal/Robustness\"\n}, {\n  title: \"Topic Modeling with meta-data\",\n  image: \"/assets/topic_modeling.png\",\n  summary: \"Analysed Dirichlet-Multinomial Regression (DMR) model for topic modeling with metadata. Derived and implemented Stochastic Gradient Riemann Langevin Dynamics on DMR model.\",\n  report: \"/assets/pdf/TPMI_PPT.pdf\",\n  github: \"none\"\n}, {\n  title: \"Tissue Classification\",\n  image: \"/assets/gene_2.png\",\n  summary: \"Predicted epithelial to mesenchymal transition and tissue hypoxia by using gene expression level of 35 genes for over 10k imbalanced samples for multiple domains. XGBoost performed the best among other methods.\",\n  report: \"/assets/pdf/Report_tissue.pdf\",\n  github: \"https://github.com/agpeshal/Gene-Expression\"\n}, {\n  title: \"Bayesian Analysis of GSN\",\n  image: \"/assets/skew_normal_2.png\",\n  summary: \"Formulated suitable parameters on all the three parameters of Geometric Skew Normal distribution to perform Bayesian analysis and evaluated the fit on multiple datasets using Kolmogorov-Smirnov test statistic.\",\n  report: \"/assets/pdf/PGP_PPT.pdf\",\n  github: \"none\"\n}, {\n  title: \"Price Change Indicator\",\n  image: \"/assets/price_change.png\",\n  summary: \"Analysed data with 700 attributes of 18 key commodities covering 140 markets across 100 districts of Syria over 22 months collected by IMPACT Initiatives (NGO) and predicted volatility and trend to assess the amount of cash transfer.\",\n  report: \"/assets/pdf/Report_Hack4Good.pdf\",\n  github: \"https://gitlab.com/analytics-club/hack4good/hs19/wonderwoman/-/tree/master\"\n}];\n/* harmony default export */ __webpack_exports__[\"default\"] = (data);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vZGF0YS9kYXRhLXByb2plY3RzLmpzP2UzOWIiXSwibmFtZXMiOlsiZGF0YSIsInRpdGxlIiwiaW1hZ2UiLCJzdW1tYXJ5IiwicmVwb3J0IiwiZ2l0aHViIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLGtEQUFNQSxJQUFJLEdBQUcsQ0FDWDtBQUNFQyxPQUFLLEVBQUUsZ0NBRFQ7QUFFRUMsT0FBSyxFQUFFLG9CQUZUO0FBR0VDLFNBQU8sRUFDTCwySkFKSjtBQUtFQyxRQUFNLEVBQUUsTUFMVjtBQU1FQyxRQUFNLEVBQUU7QUFOVixDQURXLEVBU1g7QUFDRUosT0FBSyxFQUFFLDZCQURUO0FBRUVDLE9BQUssRUFBRSx5QkFGVDtBQUdFQyxTQUFPLEVBQ0wsaUxBSko7QUFLRUMsUUFBTSxFQUFFLE1BTFY7QUFNRUMsUUFBTSxFQUFFO0FBTlYsQ0FUVyxFQWlCWDtBQUNFSixPQUFLLEVBQUUsNkJBRFQ7QUFFRUMsT0FBSyxFQUFFLHNCQUZUO0FBR0VDLFNBQU8sRUFDTCw2SkFKSjtBQUtFQyxRQUFNLEVBQUUsNkJBTFY7QUFNRUMsUUFBTSxFQUFFO0FBTlYsQ0FqQlcsRUF5Qlg7QUFDRUosT0FBSyxFQUFFLGdCQURUO0FBRUVDLE9BQUssRUFBRSx3QkFGVDtBQUdFQyxTQUFPLEVBQ0wsdUlBSko7QUFLRUMsUUFBTSxFQUFFLE1BTFY7QUFNRUMsUUFBTSxFQUFFO0FBTlYsQ0F6QlcsRUFpQ1g7QUFDRUosT0FBSyxFQUFFLCtCQURUO0FBRUVDLE9BQUssRUFBRSw0QkFGVDtBQUdFQyxTQUFPLEVBQ0wsNktBSko7QUFLRUMsUUFBTSxFQUFFLDBCQUxWO0FBTUVDLFFBQU0sRUFBRTtBQU5WLENBakNXLEVBeUNYO0FBQ0VKLE9BQUssRUFBRSx1QkFEVDtBQUVFQyxPQUFLLEVBQUUsb0JBRlQ7QUFHRUMsU0FBTyxFQUNMLG9OQUpKO0FBS0VDLFFBQU0sRUFBRSwrQkFMVjtBQU1FQyxRQUFNLEVBQUU7QUFOVixDQXpDVyxFQWlEWDtBQUNFSixPQUFLLEVBQUUsMEJBRFQ7QUFFRUMsT0FBSyxFQUFFLDJCQUZUO0FBR0VDLFNBQU8sRUFDTCxtTkFKSjtBQUtFQyxRQUFNLEVBQUUseUJBTFY7QUFNRUMsUUFBTSxFQUFFO0FBTlYsQ0FqRFcsRUF5RFg7QUFDRUosT0FBSyxFQUFFLHdCQURUO0FBRUVDLE9BQUssRUFBRSwwQkFGVDtBQUdFQyxTQUFPLEVBQ0wsMk9BSko7QUFLRUMsUUFBTSxFQUFFLGtDQUxWO0FBTUVDLFFBQU0sRUFBRTtBQU5WLENBekRXLENBQWI7QUFtRWVMLG1FQUFmIiwiZmlsZSI6Ii4vZGF0YS9kYXRhLXByb2plY3RzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZGF0YSA9IFtcbiAge1xuICAgIHRpdGxlOiBcIlVuc3VwZXJ2aXNlZCBEb21haW4gQWRhcHRhdGlvblwiLFxuICAgIGltYWdlOiBcIi9hc3NldHMvdGhlc2lzLnBuZ1wiLFxuICAgIHN1bW1hcnk6XG4gICAgICBcIkRldmlzZWQgYSBmcmFtZXdvcmsgdG8gYWRhcHQgdG8gbmV3IGEgZG9tYWluIHdoaWxlIGVuc3VyaW5nIGFkdmVyc2FyaWFsIHJvYnVzdG5lc3MuIEFjaGlldmVkIHN0YXRlLW9mLXRoZS1hcnQgcm9idXN0IGFjY3VyYWN5IG9uIGZvdXIgYmVuY2htYXJrIGRhdGFzZXRzLlwiLFxuICAgIHJlcG9ydDogXCJub25lXCIsXG4gICAgZ2l0aHViOiBcIm5vbmVcIixcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcIlBhdGllbnQgcmF0aW5ncyBhbmQgcmV2aWV3c1wiLFxuICAgIGltYWdlOiBcIi9hc3NldHMvZHJ1Z19yYXRpbmcucG5nXCIsXG4gICAgc3VtbWFyeTpcbiAgICAgIFwiQW5hbHlzZWQgZGF0YSBvZiAyODBrIHBhdGllbnRzJyBkcnVnIHJldmlld3MgYW5kIHJhdGluZ3MgdW5kZXIgZGlmZmVyZW50IGNvbmRpdGlvbnMgYW5kIHRyZWF0bWVudHMuIEltcGxlbWVudGVkIFJOTnMgdG8gYWNjdXJhdGVseSBwcmVkaWN0IGRydWcgcmF0aW5ncyBiYXNlZCBvbiB0aGVpciByZXZpZXdzLlwiLFxuICAgIHJlcG9ydDogXCJub25lXCIsXG4gICAgZ2l0aHViOiBcImh0dHBzOi8vY29sYWIucmVzZWFyY2guZ29vZ2xlLmNvbS9kcml2ZS8xYkRvcGRkQjY3RkF5VjhBXzUxTzZaNnJhX29iSFk1TThcIixcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcIk5ldXJhbCBOZXR3b3JrIFZlcmlmaWNhdGlvblwiLFxuICAgIGltYWdlOiBcIi9hc3NldHMvZGVlcHBvbHkucG5nXCIsXG4gICAgc3VtbWFyeTpcbiAgICAgIFwiQnVpbGQgYSBwcmVjaXNlIGFuZCBzY2FsYWJsZSBhdXRvbWF0ZWQgdmVyaWZpZXIgZm9yIHByb3ZpbmcgdGhlIHJvYnVzdG5lc3Mgb2YgZnVsbHkgY29ubmVjdGVkIGFuZCBjb252b2x1dGlvbmFsIG5ldXJhbCBuZXR3b3JrcyBhZ2FpbnN0IGFkdmVyc2FyaWFsIGF0dGFja3NcIixcbiAgICByZXBvcnQ6IFwiL2Fzc2V0cy9wZGYvUmVwb3J0X1JJQUkucGRmXCIsXG4gICAgZ2l0aHViOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9hZ3Blc2hhbC9WZXJpZmllclwiLFxuICB9LFxuICB7XG4gICAgdGl0bGU6IFwiQWR2ZXJzYXJpYWwgTUxcIixcbiAgICBpbWFnZTogXCIvYXNzZXRzL3JvYnVzdG5lc3MucG5nXCIsXG4gICAgc3VtbWFyeTpcbiAgICAgIFwiSW1wbGVtZW50ZWQgRmFzdCBHcmFkaWVudCBTaWduIE1ldGhvZCAoRkdTTSkgYW5kIFByb2plY3RlZCBHcmFkaWVudCBEZXNjZW50IChQR0QpIGF0dGFja3Mgb24gbmV0d29ya3MgdHJhaW5lZCBvdmVyIENJRkFSMTAgYW5kIE1OSVNULlwiLFxuICAgIHJlcG9ydDogXCJub25lXCIsXG4gICAgZ2l0aHViOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9hZ3Blc2hhbC9Sb2J1c3RuZXNzXCIsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogXCJUb3BpYyBNb2RlbGluZyB3aXRoIG1ldGEtZGF0YVwiLFxuICAgIGltYWdlOiBcIi9hc3NldHMvdG9waWNfbW9kZWxpbmcucG5nXCIsXG4gICAgc3VtbWFyeTpcbiAgICAgIFwiQW5hbHlzZWQgRGlyaWNobGV0LU11bHRpbm9taWFsIFJlZ3Jlc3Npb24gKERNUikgbW9kZWwgZm9yIHRvcGljIG1vZGVsaW5nIHdpdGggbWV0YWRhdGEuIERlcml2ZWQgYW5kIGltcGxlbWVudGVkIFN0b2NoYXN0aWMgR3JhZGllbnQgUmllbWFubiBMYW5nZXZpbiBEeW5hbWljcyBvbiBETVIgbW9kZWwuXCIsXG4gICAgcmVwb3J0OiBcIi9hc3NldHMvcGRmL1RQTUlfUFBULnBkZlwiLFxuICAgIGdpdGh1YjogXCJub25lXCIsXG4gIH0sXG4gIHtcbiAgICB0aXRsZTogXCJUaXNzdWUgQ2xhc3NpZmljYXRpb25cIixcbiAgICBpbWFnZTogXCIvYXNzZXRzL2dlbmVfMi5wbmdcIixcbiAgICBzdW1tYXJ5OlxuICAgICAgXCJQcmVkaWN0ZWQgZXBpdGhlbGlhbCB0byBtZXNlbmNoeW1hbCB0cmFuc2l0aW9uIGFuZCB0aXNzdWUgaHlwb3hpYSBieSB1c2luZyBnZW5lIGV4cHJlc3Npb24gbGV2ZWwgb2YgMzUgZ2VuZXMgZm9yIG92ZXIgMTBrIGltYmFsYW5jZWQgc2FtcGxlcyBmb3IgbXVsdGlwbGUgZG9tYWlucy4gWEdCb29zdCBwZXJmb3JtZWQgdGhlIGJlc3QgYW1vbmcgb3RoZXIgbWV0aG9kcy5cIixcbiAgICByZXBvcnQ6IFwiL2Fzc2V0cy9wZGYvUmVwb3J0X3Rpc3N1ZS5wZGZcIixcbiAgICBnaXRodWI6IFwiaHR0cHM6Ly9naXRodWIuY29tL2FncGVzaGFsL0dlbmUtRXhwcmVzc2lvblwiLFxuICB9LFxuICB7XG4gICAgdGl0bGU6IFwiQmF5ZXNpYW4gQW5hbHlzaXMgb2YgR1NOXCIsXG4gICAgaW1hZ2U6IFwiL2Fzc2V0cy9za2V3X25vcm1hbF8yLnBuZ1wiLFxuICAgIHN1bW1hcnk6XG4gICAgICBcIkZvcm11bGF0ZWQgc3VpdGFibGUgcGFyYW1ldGVycyBvbiBhbGwgdGhlIHRocmVlIHBhcmFtZXRlcnMgb2YgR2VvbWV0cmljIFNrZXcgTm9ybWFsIGRpc3RyaWJ1dGlvbiB0byBwZXJmb3JtIEJheWVzaWFuIGFuYWx5c2lzIGFuZCBldmFsdWF0ZWQgdGhlIGZpdCBvbiBtdWx0aXBsZSBkYXRhc2V0cyB1c2luZyBLb2xtb2dvcm92LVNtaXJub3YgdGVzdCBzdGF0aXN0aWMuXCIsXG4gICAgcmVwb3J0OiBcIi9hc3NldHMvcGRmL1BHUF9QUFQucGRmXCIsXG4gICAgZ2l0aHViOiBcIm5vbmVcIixcbiAgfSxcbiAge1xuICAgIHRpdGxlOiBcIlByaWNlIENoYW5nZSBJbmRpY2F0b3JcIixcbiAgICBpbWFnZTogXCIvYXNzZXRzL3ByaWNlX2NoYW5nZS5wbmdcIixcbiAgICBzdW1tYXJ5OlxuICAgICAgXCJBbmFseXNlZCBkYXRhIHdpdGggNzAwIGF0dHJpYnV0ZXMgb2YgMTgga2V5IGNvbW1vZGl0aWVzIGNvdmVyaW5nIDE0MCBtYXJrZXRzIGFjcm9zcyAxMDAgZGlzdHJpY3RzIG9mIFN5cmlhIG92ZXIgMjIgbW9udGhzIGNvbGxlY3RlZCBieSBJTVBBQ1QgSW5pdGlhdGl2ZXMgKE5HTykgYW5kIHByZWRpY3RlZCB2b2xhdGlsaXR5IGFuZCB0cmVuZCB0byBhc3Nlc3MgdGhlIGFtb3VudCBvZiBjYXNoIHRyYW5zZmVyLlwiLFxuICAgIHJlcG9ydDogXCIvYXNzZXRzL3BkZi9SZXBvcnRfSGFjazRHb29kLnBkZlwiLFxuICAgIGdpdGh1YjogXCJodHRwczovL2dpdGxhYi5jb20vYW5hbHl0aWNzLWNsdWIvaGFjazRnb29kL2hzMTkvd29uZGVyd29tYW4vLS90cmVlL21hc3RlclwiLFxuICB9LFxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZGF0YTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./data/data-projects.js\n");

/***/ })

})